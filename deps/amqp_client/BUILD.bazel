load("//bazel_erlang:bazel_erlang_lib.bzl", "app_file", "bazel_erlang_lib", "erlc")
load("//bazel_erlang:ct.bzl", "ct_test")
load("//:rabbitmq.bzl", "APP_VERSION")

APP_ENV = """[
	    {prefer_ipv6, false},
	    {ssl_options, []},
	    {writer_gc_threshold, 1000000000}
	  ]"""

DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
]

app_file(
    name = "app_file",
    app_name = "amqp_client",
    app_version = APP_VERSION,
    app_description = "RabbitMQ AMQP Client",
    app_module = "amqp_client",
    app_registered = [
        "amqp_sup",
    ],
    app_env = APP_ENV,
    extra_apps = [
        "xmerl",
    ],
    modules = [":beam_files"],
    deps = DEPS,
    # visibility = ["//visibility:public"],
)

erlc(
    name = "beam_files",
    hdrs = glob(["include/*.hrl"]),
    srcs = glob(["src/*.erl"]),
    # erlc_opts = RABBITMQ_ERLC_OPTS,
    dest = "ebin",
    deps = DEPS,
    # visibility = ["//visibility:public"],
)

bazel_erlang_lib(
    name = "bazel_erlang_lib",
    app_name = "amqp_client",
    app_version = APP_VERSION,
    hdrs = glob(["include/*.hrl"]),
    app = ":app_file",
    beam = [":beam_files"],
    visibility = ["//visibility:public"],
)

erlc(
    name = "test_beam_files",
    hdrs = glob(["include/*.hrl"]),
    srcs = glob(["src/*.erl"]),
    erlc_opts = [
        "-DTEST",
        "+debug_info",
    ],
    dest = "src",
    deps = DEPS,
    # visibility = ["//visibility:public"],
)

bazel_erlang_lib(
    name = "test_bazel_erlang_lib",
    app_name = "amqp_client",
    app_version = APP_VERSION,
    hdrs = glob(["include/*.hrl"]),
    app = ":app_file",
    beam = [":test_beam_files"],
    visibility = ["//visibility:public"],
)

# ct_test(
#     name = "system_SUITE",
#     app_name = "amqp_client",
#     hdrs = glob(["include/*.hrl"]),
#     srcs = glob(["src/*.erl"]),
#     suites = ["test/system_SUITE.erl"],
#     deps = [
#         ":amqp_client_test",
#         "//deps/rabbit_common:rabbit_common",
#         "@rabbitmq_ct_helpers//:rabbitmq_ct_helpers",
#         "@credentials-obfuscation//:credentials_obfuscation",
#     ],
#     runtime_deps = [
#         "@lager//:lager",
#         "@goldrush//:goldrush",
#         "@jsx//:jsx",
#         "@ranch//:ranch",
#         "@recon//:recon",
#         "@meck//:meck",
#     ],
#     tools = [
#         "//:rabbitmq-run",
#         # "//:rabbitmqctl",
#     ],
#     test_env = {
#         # "PATH": "$PWD:$PATH", # allow 'rabbitmq-run' to be run without an absolute path
#         "RABBITMQ_CT_SKIP_AS_ERROR": "true",
#         "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/rabbitmq-run",
#         "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/broker-home/sbin/rabbitmqctl"
#     },
#     size = "large",
# )

erlc(
    name = "unit_SUITE_beam_files",
    hdrs = glob(["include/*.hrl"]),
    srcs = ["test/unit_SUITE.erl"],
    dest = "test",
    deps = DEPS + [
        ":test_bazel_erlang_lib",
    ],
)

ct_test(
    name = "unit_SUITE",
    suites = [":unit_SUITE_beam_files"],
    deps = DEPS + [
        ":test_bazel_erlang_lib",
        "//deps/rabbit:bazel_erlang_lib",
    ],
    size = "small",
)
