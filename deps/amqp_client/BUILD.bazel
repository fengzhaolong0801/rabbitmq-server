load("//bazel_erlang:bazel_erlang_lib.bzl", "erlang_lib", "erlc")
load("//bazel_erlang:ct.bzl", "ct_suite")
load("//:rabbitmq.bzl", "APP_VERSION", "rabbitmq_lib")

APP_ENV = """[
	    {prefer_ipv6, false},
	    {ssl_options, []},
	    {writer_gc_threshold, 1000000000}
	  ]"""

DEPS = [
    "@lager//:bazel_erlang_lib",
    "//deps/rabbit_common:bazel_erlang_lib",
]

rabbitmq_lib(
    app_name = "amqp_client",
    app_description = "RabbitMQ AMQP Client",
    app_module = "amqp_client",
    app_registered = [
        "amqp_sup",
    ],
    app_env = APP_ENV,
    extra_apps = [
        "xmerl",
    ],
    first_srcs = ["src/amqp_gen_connection.erl", "src/amqp_gen_consumer.erl"],
    deps = DEPS,
)

ct_suite(
    suite_name = "system_SUITE",
    deps = DEPS,
    runtime_deps = [
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
        "@credentials-obfuscation//:bazel_erlang_lib",
        "@goldrush//:bazel_erlang_lib",
        "@jsx//:bazel_erlang_lib",
        "@ranch//:bazel_erlang_lib",
        "@recon//:bazel_erlang_lib",
        "@meck//:bazel_erlang_lib",
    ],
    tools = [
        "//:rabbitmq-run",
    ],
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/rabbitmq-run",
        "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/broker-home/sbin/rabbitmqctl"
    },
    size = "large",
)

ct_suite(
    suite_name = "unit_SUITE",
    deps = DEPS,
    runtime_deps = [
        "//deps/rabbit:bazel_erlang_lib",
    ],
    size = "small",
)
