load("//bazel_erlang:bazel_erlang_lib.bzl", "bazel_erlang_lib")
load("//bazel_erlang:bazel_erlang_app.bzl", "bazel_erlang_app")
load("//bazel_erlang:ct.bzl", "ct_test")

py_binary(
    name = "codegen",
    srcs = [
        "codegen.py",
    ],
    deps = [
        "//deps/rabbitmq_codegen:amqp_codegen",
    ],
    imports = ["../../deps/rabbitmq_codegen"],
)

genrule(
    name = "generated_headers",
    srcs = [
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.9.1.json",
        "//deps/rabbitmq_codegen:credit_extension.json",
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.8.json",
    ],
    outs = ["include/rabbit_framing.hrl"],
    tools = [":codegen"],
    cmd = "$(location :codegen) --ignore-conflicts header $(SRCS) $@",
)

bazel_erlang_app(
    name = "rabbit_common",
    app_name = "rabbit_common",
    # TODO: how do we inject the correct app_version? another build setting? a data file?
    app_version = "3.9.0",
    srcs = glob(["src/*.erl"]),
    hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
    visibility = ["//visibility:public"],
)

bazel_erlang_app(
    name = "rabbit_common_test",
    app_name = "rabbit_common",
    app_version = "3.9.0",
    srcs = glob(["src/*.erl"]),
    hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
    erlc_opts = [
        "+{parse_transform,lager_transform}",
        "+{lager_extra_sinks,[rabbit_log,rabbit_log_channel,rabbit_log_connection,rabbit_log_feature_flags,rabbit_log_federation,rabbit_log_ldap,rabbit_log_mirroring,rabbit_log_osiris,rabbit_log_prelaunch,rabbit_log_queue,rabbit_log_ra,rabbit_log_shovel,rabbit_log_upgrade]}",
    ],
    deps = [
        "@lager//:lager",
    ],
    visibility = ["//visibility:public"],
    testonly = True,
)

# There are compile macros conditional for tests, so we can't just use the regular version of :bazel_erlang_lib
ct_test(
    name = "rabbit_env_SUITE",
    suites = ["test/rabbit_env_SUITE.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
        "//deps/rabbit:rabbit",
        "@lager//:lager",
        "@proper//:proper",
    ],
    size = "small",
)

ct_test(
    name = "supervisor2_SUITE",
    suites = ["test/supervisor2_SUITE.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
        "@proper//:proper",
    ],
    size = "small",
)

ct_test(
    name = "unit_priority_queue_SUITE",
    suites = ["test/unit_priority_queue_SUITE.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
        "@proper//:proper",
    ],
    size = "small",
)

ct_test(
    name = "unit_SUITE",
    suites = ["test/unit_SUITE.erl", "test/gen_server2_test_server.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
        "@proper//:proper",
        "@lager//:lager",
        "@credentials_obfuscation//:credentials_obfuscation",
    ],
    size = "small",
)

ct_test(
    name = "worker_pool_SUITE",
    suites = ["test/worker_pool_SUITE.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
        "@proper//:proper",
        "@lager//:lager",
    ],
    size = "small",
)
