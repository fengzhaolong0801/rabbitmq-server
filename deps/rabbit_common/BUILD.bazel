load("//bazel_erlang:bazel_erlang_lib.bzl", "app_file", "bazel_erlang_lib", "erlc")
load("//bazel_erlang:ct.bzl", "ct_test")
load("//:rabbitmq.bzl", "RABBITMQ_ERLC_OPTS", "APP_VERSION")

py_binary(
    name = "codegen",
    srcs = [
        "codegen.py",
    ],
    deps = [
        "//deps/rabbitmq_codegen:amqp_codegen",
    ],
    imports = ["../../deps/rabbitmq_codegen"],
)

genrule(
    name = "generated_headers",
    srcs = [
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.9.1.json",
        "//deps/rabbitmq_codegen:credit_extension.json",
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.8.json",
    ],
    outs = ["include/rabbit_framing.hrl"],
    tools = [":codegen"],
    cmd = "$(location :codegen) --ignore-conflicts header $(SRCS) $@",
)

genrule(
    name = "rabbit_framing_amqp_0_9_1.erl",
    srcs = [
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.9.1.json",
    ],
    outs = ["src/rabbit_framing_amqp_0_9_1.erl"],
    tools = [":codegen"],
    cmd = "$(location :codegen) body $(SRCS) $@",
)

genrule(
    name = "rabbit_framing_amqp_0_8.erl",
    srcs = [
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.8.json",
    ],
    outs = ["src/rabbit_framing_amqp_0_8.erl"],
    tools = [":codegen"],
    cmd = "$(location :codegen) body $(SRCS) $@",
)

DEPS = [
    "@lager//:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "@jsx//:bazel_erlang_lib",
    "@ranch//:bazel_erlang_lib",
    "@recon//:bazel_erlang_lib",
    "@credentials-obfuscation//:bazel_erlang_lib",
]

app_file(
    name = "app_file",
    app_name = "rabbit_common",
    app_description = "Modules shared by rabbitmq-server and rabbitmq-erlang-client",
    app_version = APP_VERSION,
    extra_apps = [
        "compiler",
        "crypto",
        "public_key",
        "sasl",
        "ssl",
        "syntax_tools",
        "tools",
        "xmerl",
    ],
    modules = [":beam_files"],
    deps = DEPS + RUNTIME_DEPS,
)

erlc(
    name = "beam_files",
    hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
    srcs = glob(["src/*.erl"]) + ["src/rabbit_framing_amqp_0_8.erl", "src/rabbit_framing_amqp_0_9_1.erl"],
    erlc_opts = RABBITMQ_ERLC_OPTS,
    dest = "ebin",
    deps = DEPS,
)

bazel_erlang_lib(
    name = "bazel_erlang_lib",
    app_name = "rabbit_common",
    app_version = APP_VERSION,
    hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
    app = ":app_file",
    beam = [":beam_files"],
    visibility = ["//visibility:public"],
)

erlc(
    name = "test_beam_files",
    hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
    srcs = glob(["src/*.erl"]) + ["src/rabbit_framing_amqp_0_8.erl", "src/rabbit_framing_amqp_0_9_1.erl"],
    erlc_opts = RABBITMQ_ERLC_OPTS + [
        "-DTEST",
        "+debug_info",
    ],
    dest = "src",
    deps = DEPS,
)

# ct_test(
#     name = "rabbit_env_SUITE",
#     app_name = "rabbit_common",
#     hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
#     srcs = glob(["src/*.erl"]) + ["src/rabbit_framing_amqp_0_8.erl", "src/rabbit_framing_amqp_0_9_1.erl"],
#     suites = ["test/rabbit_env_SUITE.erl"],
#     erlc_opts = RABBITMQ_ERLC_OPTS,
#     deps = [
#         "//deps/rabbit:rabbit",
#         "@lager//:lager",
#         "@proper//:proper",
#     ],
#     size = "small",
# )

# ct_test(
#     name = "supervisor2_SUITE",
#     app_name = "rabbit_common",
#     hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
#     srcs = glob(["src/*.erl"]) + ["src/rabbit_framing_amqp_0_8.erl", "src/rabbit_framing_amqp_0_9_1.erl"],
#     suites = ["test/supervisor2_SUITE.erl"],
#     erlc_opts = RABBITMQ_ERLC_OPTS,
#     size = "small",
# )

# ct_test(
#     name = "unit_priority_queue_SUITE",
#     app_name = "rabbit_common",
#     hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
#     srcs = glob(["src/*.erl"]) + ["src/rabbit_framing_amqp_0_8.erl", "src/rabbit_framing_amqp_0_9_1.erl"],
#     suites = ["test/unit_priority_queue_SUITE.erl"],
#     erlc_opts = RABBITMQ_ERLC_OPTS,
#     size = "small",
# )

# ct_test(
#     name = "unit_SUITE",
#     app_name = "rabbit_common",
#     hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
#     srcs = glob(["src/*.erl"]) + ["src/rabbit_framing_amqp_0_8.erl", "src/rabbit_framing_amqp_0_9_1.erl"],
#     suites = ["test/unit_SUITE.erl", "test/gen_server2_test_server.erl"],
#     erlc_opts = RABBITMQ_ERLC_OPTS,
#     deps = [
#         "@proper//:proper",
#         "@lager//:lager",
#         "@credentials-obfuscation//:credentials_obfuscation",
#     ],
#     size = "small",
# )

# ct_test(
#     name = "worker_pool_SUITE",
#     app_name = "rabbit_common",
#     hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
#     srcs = glob(["src/*.erl"]) + ["src/rabbit_framing_amqp_0_8.erl", "src/rabbit_framing_amqp_0_9_1.erl"],
#     suites = ["test/worker_pool_SUITE.erl"],
#     erlc_opts = RABBITMQ_ERLC_OPTS,
#     deps = [
#         "@lager//:lager",
#     ],
#     size = "small",
# )
