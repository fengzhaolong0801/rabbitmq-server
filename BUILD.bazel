load(":rabbitmq_home.bzl", "rabbitmq_home")
load(":rabbitmq_run.bzl", "run_broker", "start_background_broker")
load(":rabbitmqctl.bzl", "rabbitmqctl")

# Note: maybe the different erlang versions need to be modeled as
#       different target platforms? We could select between deps of
#       fixed versions (i.e. rabbitmq_run could select a home that
#       is hard coded to an erlang version)

rabbitmq_home(
    name = "broker-home",
)

rabbitmq_home(
    name = "broker-management-home",
    plugins = [
        "//deps/rabbitmq_management:rabbitmq_management",
        "//deps/rabbitmq_management_agent:rabbitmq_management_agent",
        "//deps/rabbitmq_web_dispatch:rabbitmq_web_dispatch",
        "//deps/amqp_client:amqp_client",
        "@cowboy//:cowboy",
        "@cowlib//:cowlib",
    ],
)

rabbitmq_home(
    name = "broker-for-cli-tests-home",
    plugins = [
        "//deps/rabbitmq_federation:rabbitmq_federation",
        "//deps/rabbitmq_stomp:rabbitmq_stomp",
        "//deps/amqp_client:amqp_client",
    ],
)

# Allow us to bazel run :broker
# for the equivalent of `make run-broker`
# (though it as of yet includes no plugins)
run_broker(
    name = "broker",
    home = ":broker-home",
)

# `bazel run :broker-management` for the broker with just the
# management plugin
run_broker(
    name = "broker-management",
    home = ":broker-management-home",
)

start_background_broker(
    name = "broker-for-cli-tests",
    home = ":broker-for-cli-tests-home",
    visibility = ["//visibility:public"],
)

rabbitmqctl(
    name = "rabbitmqctl",
    home = ":broker-home",
)