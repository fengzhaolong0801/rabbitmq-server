name: Test
on: push
jobs:
  test:
    name: test
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 1
      matrix:
        erlang_version:
        - "22.3"
        - "23.1"
    timeout-minutes: 30
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: ${{ matrix.erlang_version }}
        # https://github.com/elixir-lang/elixir/releases
        elixir-version: 1.10.4
    - name: MOUNT BAZEL CACHE
      uses: actions/cache@v2
      with:
        path: "/home/runner/.cache/bazel"
        key: ${{ runner.os }}-bazel-${{ matrix.erlang_version }}
    - name: INSTALL BAZELISK
      run: |
        curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
        mkdir -p "${GITHUB_WORKSPACE}/bin/"
        mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
        chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
    - name: CONFIGURE BAZEL
      run: |
        ERLANG_HOME="$(dirname $(dirname $(which erl)))"
        ELIXIR_HOME="$(dirname $(dirname $(which iex)))"

        echo "build --//bazel_erlang:erlang_version=${{ matrix.erlang_version }}" >> .bazelrc
        echo "build --//bazel_erlang:erlang_home=${ERLANG_HOME}" >> .bazelrc
        echo "build --//bazel_erlang:elixir_home=${ELIXIR_HOME}" >> .bazelrc
    #! - name: Setup tmate session
    #!   uses: mxschmitt/action-tmate@v3
    - name: RUN TESTS
      run: |
        "${GITHUB_WORKSPACE}/bin/bazel" test //... \
          --test_verbose_timeout_warnings \
          --verbose_failures
    - name: RESOVLE TESTLOGS
      id: resolve_logs
      if: success() || failure()
      run: |
        echo "::set-output name=dir::$(readlink -f bazel-testlogs)"
    - name: CAPTURE LOGS
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: bazel-testlogs-${{ matrix.erlang_version }}
        path: ${{ steps.resolve_logs.outputs.dir }}
