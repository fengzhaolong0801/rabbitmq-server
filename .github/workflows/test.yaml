name: Test
on: push
jobs:
  test:
    name: test
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        erlang_version:
        - "22.3"
        - "23.1"
    timeout-minutes: 30
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: INSTALL BAZELISK
      run: |
        curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
        mkdir -p "${GITHUB_WORKSPACE}/bin/"
        mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
        chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
    - name: CONFIGURE BAZEL
      run: |
        echo "${{ secrets.BAZELRC_CONTENTS }}" > .bazelrc
        cat << EOF >> .bazelrc
          build --remote_executor=grpcs://cloud.buildbuddy.io
          # build --host_platform=//:erlang_${{ matrix.erlang_version }}_platform
          # build --platforms=//:erlang_${{ matrix.erlang_version }}_platform
          # build --extra_execution_platforms=//:erlang_${{ matrix.erlang_version }}_platform

          # Set several flags related to specifying the platform, toolchain and java
          # properties.
          # These flags should only be used as is for the rbe-ubuntu16-04 container
          # and need to be adapted to work with other toolchain containers.
          build --host_javabase=@rbe_default//java:jdk
          build --javabase=@rbe_default//java:jdk
          build --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8
          build --java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8
          build --crosstool_top=@rbe_default//cc:toolchain
          build --action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1

          # Platform flags:
          # The toolchain container used for execution is defined in the target indicated
          # by "extra_execution_platforms", "host_platform" and "platforms".
          # More about platforms: https://docs.bazel.build/versions/master/platforms.html
          build --extra_toolchains=@rbe_default//config:cc-toolchain
          build --extra_execution_platforms=@rbe_default//config:platform
          build --host_platform=@rbe_default//config:platform
          build --platforms=@rbe_default//config:platform

          # Enforce stricter environment rules, which eliminates some non-hermetic
          # behavior and therefore improves both the remote cache hit rate and the
          # correctness and repeatability of the build.
          build --incompatible_strict_action_env=true

          build --@bazel-erlang//:erlang_version=${{ matrix.erlang_version }}
          build --@bazel-erlang//:erlang_home=/usr/local/lib/erlang
          build --@bazel-erlang//:elixir_home=/usr/local/lib/elixir

          # build --bes_results_url=https://app.buildbuddy.io/invocation/
          # build --bes_backend=grpcs://cloud.buildbuddy.io
          # build --remote_cache=grpcs://cloud.buildbuddy.io
          build --remote_timeout=600
        EOF
    #! - name: Setup tmate session
    #!   uses: mxschmitt/action-tmate@v3
    - name: BUILD
      run: |
        "${GITHUB_WORKSPACE}/bin/bazel" build //deps/amqp10_common:codegen \
          --verbose_failures \
          --jobs 1
    - name: RUN TESTS
      run: |
        "${GITHUB_WORKSPACE}/bin/bazel" test //... \
          --test_verbose_timeout_warnings \
          --verbose_failures \
          --jobs 1
